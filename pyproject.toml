[tool.poetry]
name = "intelligent-rss-consumer"
version = "1.0.0"
description = "Intelligent RSS feed consumer with local LLM processing"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]
keywords = ["rss", "feed", "consumer", "llm", "artificial intelligence", "machine learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
]

[tool.poetry.dependencies]
python = "^3.12.0"
feedparser = "^6.0.10"
requests = "^2.31.0"
beautifulsoup4 = "^4.12.2"
llama-cpp-python = "^0.2.20"
typing-extensions = "^4.8.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^6.0"
pytest-cov = "^2.0"
black = "^21.0"
flake8 = "^3.8"
mypy = "^0.800"
pre-commit = "^2.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^3.0"
sphinx-rtd-theme = "^0.5"

[tool.poetry.scripts]
rss-consumer = "main:main"

[tool.poetry.urls]
"Homepage" = "https://github.com/yourusername/intelligent-rss-consumer"
"Bug Tracker" = "https://github.com/yourusername/intelligent-rss-consumer/issues"
"Documentation" = "https://github.com/yourusername/intelligent-rss-consumer#readme"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
] 